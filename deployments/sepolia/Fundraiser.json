{
  "address": "0x373E6a32B4279A2e263C879eCbCD0709Df4D72bA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokensPerWei",
          "type": "uint256[]"
        },
        {
          "internalType": "contract IERC20MintBurnable",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract IERC721Mintable",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_fundStorage",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_start",
          "type": "uint32"
        },
        {
          "internalType": "uint32[]",
          "name": "_end",
          "type": "uint32[]"
        },
        {
          "internalType": "uint256",
          "name": "_minWeiPerAccount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxWeiPerAccount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundStorageReverted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundraiserNotOverYet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LessThanMinPerAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoFundsAttached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotDuringFundraisingPeriod",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SurpassMaxPerAccount",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "_currentTokensPerWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "end",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundStorage",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundsToStorage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxWeiPerAccount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minWeiPerAccount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nft",
      "outputs": [
        {
          "internalType": "contract IERC721Mintable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20MintBurnable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokensPerWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4eff86c80b1dcc8327f18910eae13b7b0f28c3b47ef1bbe955ee022d0dd4a5c9",
  "receipt": {
    "to": null,
    "from": "0xaF7E68bCb2Fc7295492A00177f14F59B92814e70",
    "contractAddress": "0x373E6a32B4279A2e263C879eCbCD0709Df4D72bA",
    "transactionIndex": 25,
    "gasUsed": "798950",
    "logsBloom": "0x
    "blockHash": "0xf6c05dd0a91ad698fb89a49e1aa70438548a9bc9b68a468a75d9dff561ef4d88",
    "transactionHash": "0x4eff86c80b1dcc8327f18910eae13b7b0f28c3b47ef1bbe955ee022d0dd4a5c9",
    "logs": [],
    "blockNumber": 4753027,
    "cumulativeGasUsed": "2846598",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "30000",
      "27500",
      "25000"
    ],
    "0x9524c3dF8B40fbD55Eff4c6e48E4386B0Ec114F9",
    "0xCa05e4185a5E8d07dc7DA06F6359db63Fa090e33",
    "0x44DbB18208bBFd976c3351Db1Fa4C6871d503c0E",
    1701126000,
    [
      1701730800,
      1702335600,
      1703545200
    ],
    "500000000000000000",
    "2000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "9b4aa24c3c6a845a3f4d806135a61042",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokensPerWei\",\"type\":\"uint256[]\"},{\"internalType\":\"contract IERC20MintBurnable\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IERC721Mintable\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_fundStorage\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_start\",\"type\":\"uint32\"},{\"internalType\":\"uint32[]\",\"name\":\"_end\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"_minWeiPerAccount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxWeiPerAccount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundStorageReverted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundraiserNotOverYet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LessThanMinPerAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoFundsAttached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotDuringFundraisingPeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SurpassMaxPerAccount\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_currentTokensPerWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundStorage\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundsToStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWeiPerAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minWeiPerAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721Mintable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20MintBurnable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokensPerWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundraiser.sol\":\"Fundraiser\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\"},\"contracts/Fundraiser.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IERC20MintBurnable} from \\\".//IERC20MintBurnable.sol\\\";\\nimport {IERC721Mintable} from \\\"./IERC721Mintable.sol\\\";\\n\\ncontract Fundraiser {\\n    mapping(address => uint256) public contributed;\\n    uint256[] public tokensPerWei;\\n    IERC20MintBurnable public immutable token;\\n    IERC721Mintable public immutable nft;\\n    address payable public immutable fundStorage;\\n    uint32 public immutable start;\\n    uint32[] public end;\\n    uint256 public immutable minWeiPerAccount;\\n    uint256 public immutable maxWeiPerAccount;\\n\\n    error LessThanMinPerAccount();\\n    error SurpassMaxPerAccount();\\n    error FundStorageReverted();\\n    error NotDuringFundraisingPeriod();\\n    error NoFundsAttached();\\n    error FundraiserNotOverYet();\\n\\n    constructor(\\n        uint256[] memory _tokensPerWei,\\n        IERC20MintBurnable _token,\\n        IERC721Mintable _nft,\\n        address payable _fundStorage,\\n        uint32 _start,\\n        uint32[] memory _end,\\n        uint256 _minWeiPerAccount,\\n        uint256 _maxWeiPerAccount\\n    ) {\\n        tokensPerWei = _tokensPerWei;\\n        token = _token;\\n        nft = _nft;\\n        fundStorage = _fundStorage;\\n        start = _start;\\n        end = _end;\\n        minWeiPerAccount = _minWeiPerAccount;\\n        maxWeiPerAccount = _maxWeiPerAccount;\\n    }\\n\\n    fallback() external payable {\\n        _fundraise();\\n    }\\n\\n    receive() external payable {\\n        _fundraise();\\n    }\\n\\n    function _currentTokensPerWei() public view returns (uint256) {\\n        if (block.timestamp < start) {\\n            revert NotDuringFundraisingPeriod();\\n        }\\n\\n        for (uint i; i < end.length; ) {\\n            if (block.timestamp < end[i]) {\\n                return tokensPerWei[i];\\n            }\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        revert NotDuringFundraisingPeriod();\\n    }\\n\\n    function _fundraise() internal {\\n        if (msg.value == 0) {\\n            revert NoFundsAttached();\\n        }\\n\\n        uint256 personalContribution = contributed[msg.sender] + msg.value;\\n        if (personalContribution < minWeiPerAccount) {\\n            revert LessThanMinPerAccount();\\n        }\\n        if (personalContribution > maxWeiPerAccount) {\\n            revert SurpassMaxPerAccount();\\n        }\\n\\n        token.transfer(msg.sender, msg.value * _currentTokensPerWei());\\n        if (personalContribution == maxWeiPerAccount) {\\n            nft.mint(msg.sender);\\n        }\\n\\n        contributed[msg.sender] = personalContribution;\\n    }\\n\\n    function fundsToStorage() external {\\n        if (block.timestamp < end[end.length - 1]) {\\n            revert FundraiserNotOverYet();\\n        }\\n\\n        // Send raised funds to treasury\\n        (bool succes, ) = fundStorage.call{value: address(this).balance}(\\\"\\\");\\n        if (!succes) {\\n            revert FundStorageReverted();\\n        }\\n\\n        // Burn remaining tokens\\n        token.burn(token.balanceOf(address(this)));\\n    }\\n}\\n\",\"keccak256\":\"0xb85c480d558a836fd34506aaac76a8f60dee4b820ca71a85932b0b121bcd90d7\",\"license\":\"MIT\"},\"contracts/IERC20MintBurnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20MintBurnable is IERC20 {\\n    /// Mints tokens to a specific account.\\n    /// @dev Should be locked behind a permission.\\n    /// @param account The account that will receive the minted tokens.\\n    /// @param amount The amount of tokens to mint.\\n    function mint(address account, uint256 amount) external;\\n\\n    /// Burns tokens from your account.\\n    /// @param amount The amount of tokens to burn.\\n    function burn(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0xbd51543bfae5ade915e9ce86e628219b56c910444ca076d6dca66ec96a39dfb6\",\"license\":\"MIT\"},\"contracts/IERC721Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {IERC721} from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ninterface IERC721Mintable is IERC721 {\\n    /// Mints an ERC721 token to a specific account.\\n    /// @dev Should be locked behind a permission.\\n    /// @param account The account that will receive the minted token.\\n    function mint(address account) external;\\n}\\n\",\"keccak256\":\"0xa64ebecfc6477f6e49393dab3a7d845626ba3bc96699d6721d9a0ef40043702f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101406040523480156200001257600080fd5b5060405162000f4638038062000f468339810160408190526200003591620002d0565b87516200004a9060019060208b01906200009c565b506001600160a01b0380881660805286811660a052851660c05263ffffffff841660e052825162000083906002906020860190620000ec565b50610100919091526101205250620003f4945050505050565b828054828255906000526020600020908101928215620000da579160200282015b82811115620000da578251825591602001919060010190620000bd565b50620000e892915062000198565b5090565b82805482825590600052602060002090600701600890048101928215620000da5791602002820160005b838211156200015c57835183826101000a81548163ffffffff021916908363ffffffff160217905550926020019260040160208160030104928301926001030262000116565b80156200018e5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026200015c565b5050620000e89291505b5b80821115620000e8576000815560010162000199565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620001f057620001f0620001af565b604052919050565b60006001600160401b03821115620002145762000214620001af565b5060051b60200190565b80516001600160a01b03811681146200023657600080fd5b919050565b805163ffffffff811681146200023657600080fd5b600082601f8301126200026257600080fd5b815160206200027b6200027583620001f8565b620001c5565b8083825260208201915060208460051b8701019350868411156200029e57600080fd5b602086015b84811015620002c557620002b7816200023b565b8352918301918301620002a3565b509695505050505050565b600080600080600080600080610100898b031215620002ee57600080fd5b88516001600160401b03808211156200030657600080fd5b818b0191508b601f8301126200031b57600080fd5b815160206200032e6200027583620001f8565b82815260059290921b8401810191818101908f8411156200034e57600080fd5b948201945b838610156200036e5785518252948201949082019062000353565b9c506200037f90508d82016200021e565b9a5050506200039160408c016200021e565b9750620003a160608c016200021e565b9650620003b160808c016200023b565b955060a08b0151915080821115620003c857600080fd5b50620003d78b828c0162000250565b60c08b015160e0909b0151999c989b509699959894979350505050565b60805160a05160c05160e0516101005161012051610aca6200047c6000396000818161021f015281816103a601526104e4015260008181610123015261034c01526000818161025301526105f90152600081816101be015261078201526000818161016501526105370152600081816102d10152818161040001526108660152610aca6000f3fe6080604052600436106100c05760003560e01c8063ad1e090111610074578063daa0e1371161004e578063daa0e1371461028a578063f6508be61461029f578063fc0c546a146102bf576100cf565b8063ad1e09011461020d578063be9a655514610241578063c436b72b14610275576100cf565b806347ccca02116100a557806347ccca0214610153578063769de7d2146101ac578063995c5e9d146101e0576100cf565b80630ad24528146100d75780632fcafec314610111576100cf565b366100cf576100cd6102f3565b005b6100cd6102f3565b3480156100e357600080fd5b506100f76100f2366004610962565b6105bb565b60405163ffffffff90911681526020015b60405180910390f35b34801561011d57600080fd5b506101457f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610108565b34801561015f57600080fd5b506101877f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610108565b3480156101b857600080fd5b506101877f000000000000000000000000000000000000000000000000000000000000000081565b3480156101ec57600080fd5b506101456101fb36600461097b565b60006020819052908152604090205481565b34801561021957600080fd5b506101457f000000000000000000000000000000000000000000000000000000000000000081565b34801561024d57600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b34801561028157600080fd5b506101456105f5565b34801561029657600080fd5b506100cd610701565b3480156102ab57600080fd5b506101456102ba366004610962565b610941565b3480156102cb57600080fd5b506101877f000000000000000000000000000000000000000000000000000000000000000081565b3460000361032d576040517f580d5e4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152602081905260408120546103489034906109e7565b90507f00000000000000000000000000000000000000000000000000000000000000008110156103a4576040517f15cac1c000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000008111156103fe576040517f2135c2c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336104436105f5565b61044d9034610a00565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af11580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e19190610a17565b507f000000000000000000000000000000000000000000000000000000000000000081036105a9576040517f6a6278420000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636a62784290602401600060405180830381600087803b15801561059057600080fd5b505af11580156105a4573d6000803e3d6000fd5b505050505b33600090815260208190526040902055565b600281815481106105cb57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16421015610657576040517f46ea3b2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002548110156106ce576002818154811061067757610677610a39565b6000918252602090912060088204015460079091166004026101000a900463ffffffff164210156106c657600181815481106106b5576106b5610a39565b906000526020600020015491505090565b60010161065a565b506040517f46ea3b2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002805461071190600190610a68565b8154811061072157610721610a39565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1642101561077e576040517f5ddf2aeb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405160006040518083038185875af1925050503d80600081146107f8576040519150601f19603f3d011682016040523d82523d6000602084013e6107fd565b606091505b5050905080610838576040517f1dd4050700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906342966c689082906370a0823190602401602060405180830381865afa1580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee9190610a7b565b6040518263ffffffff1660e01b815260040161090c91815260200190565b600060405180830381600087803b15801561092657600080fd5b505af115801561093a573d6000803e3d6000fd5b5050505050565b6001818154811061095157600080fd5b600091825260209091200154905081565b60006020828403121561097457600080fd5b5035919050565b60006020828403121561098d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146109b157600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156109fa576109fa6109b8565b92915050565b80820281158282048414176109fa576109fa6109b8565b600060208284031215610a2957600080fd5b815180151581146109b157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b818103818111156109fa576109fa6109b8565b600060208284031215610a8d57600080fd5b505191905056fea26469706673582212201f31da88e73d803dad3ef85788a64fb0912efe535a02e419f3ea42f7929f0ebf64736f6c63430008170033",
  "deployedBytecode": "0x6080604052600436106100c05760003560e01c8063ad1e090111610074578063daa0e1371161004e578063daa0e1371461028a578063f6508be61461029f578063fc0c546a146102bf576100cf565b8063ad1e09011461020d578063be9a655514610241578063c436b72b14610275576100cf565b806347ccca02116100a557806347ccca0214610153578063769de7d2146101ac578063995c5e9d146101e0576100cf565b80630ad24528146100d75780632fcafec314610111576100cf565b366100cf576100cd6102f3565b005b6100cd6102f3565b3480156100e357600080fd5b506100f76100f2366004610962565b6105bb565b60405163ffffffff90911681526020015b60405180910390f35b34801561011d57600080fd5b506101457f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610108565b34801561015f57600080fd5b506101877f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610108565b3480156101b857600080fd5b506101877f000000000000000000000000000000000000000000000000000000000000000081565b3480156101ec57600080fd5b506101456101fb36600461097b565b60006020819052908152604090205481565b34801561021957600080fd5b506101457f000000000000000000000000000000000000000000000000000000000000000081565b34801561024d57600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b34801561028157600080fd5b506101456105f5565b34801561029657600080fd5b506100cd610701565b3480156102ab57600080fd5b506101456102ba366004610962565b610941565b3480156102cb57600080fd5b506101877f000000000000000000000000000000000000000000000000000000000000000081565b3460000361032d576040517f580d5e4b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152602081905260408120546103489034906109e7565b90507f00000000000000000000000000000000000000000000000000000000000000008110156103a4576040517f15cac1c000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000008111156103fe576040517f2135c2c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336104436105f5565b61044d9034610a00565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af11580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e19190610a17565b507f000000000000000000000000000000000000000000000000000000000000000081036105a9576040517f6a6278420000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690636a62784290602401600060405180830381600087803b15801561059057600080fd5b505af11580156105a4573d6000803e3d6000fd5b505050505b33600090815260208190526040902055565b600281815481106105cb57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16421015610657576040517f46ea3b2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002548110156106ce576002818154811061067757610677610a39565b6000918252602090912060088204015460079091166004026101000a900463ffffffff164210156106c657600181815481106106b5576106b5610a39565b906000526020600020015491505090565b60010161065a565b506040517f46ea3b2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002805461071190600190610a68565b8154811061072157610721610a39565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1642101561077e576040517f5ddf2aeb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405160006040518083038185875af1925050503d80600081146107f8576040519150601f19603f3d011682016040523d82523d6000602084013e6107fd565b606091505b5050905080610838576040517f1dd4050700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906342966c689082906370a0823190602401602060405180830381865afa1580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee9190610a7b565b6040518263ffffffff1660e01b815260040161090c91815260200190565b600060405180830381600087803b15801561092657600080fd5b505af115801561093a573d6000803e3d6000fd5b5050505050565b6001818154811061095157600080fd5b600091825260209091200154905081565b60006020828403121561097457600080fd5b5035919050565b60006020828403121561098d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146109b157600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156109fa576109fa6109b8565b92915050565b80820281158282048414176109fa576109fa6109b8565b600060208284031215610a2957600080fd5b815180151581146109b157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b818103818111156109fa576109fa6109b8565b600060208284031215610a8d57600080fd5b505191905056fea26469706673582212201f31da88e73d803dad3ef85788a64fb0912efe535a02e419f3ea42f7929f0ebf64736f6c63430008170033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9811,
        "contract": "contracts/Fundraiser.sol:Fundraiser",
        "label": "contributed",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9814,
        "contract": "contracts/Fundraiser.sol:Fundraiser",
        "label": "tokensPerWei",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 9827,
        "contract": "contracts/Fundraiser.sol:Fundraiser",
        "label": "end",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_uint32)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint32)dyn_storage": {
        "base": "t_uint32",
        "encoding": "dynamic_array",
        "label": "uint32[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}